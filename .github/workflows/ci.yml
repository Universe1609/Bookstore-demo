name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            
            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                  python-version: 3.10.12
            
            - name: Cache Dependencies
              uses: actions/cache@v3
              with:
                path: ~/.cache/pip
                key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
                restore-keys: |
                  ${{ runner.os }}-pip-

            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt
            
            - name: Compilar app
              run: |
                python app.py

            - name: Run tests
              run: |
                pytest -v 
              continue-on-error: false
              env:
                CI: true

            - name: Archive test results
              uses: actions/upload-artifact@v3
              with:
                name: test-results
                path: ./test-reports/

            - name: Sonarqube Scanner
              env:
                SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              run: |
                sonar-scanner \
                -Dsonar.projectKey=my_project_key \
                -Dsonar.sources=. \
                -Dsonar.host.url=${SONAR_HOST_URL} \
                -Dsonar.login=${SONAR_TOKEN}
              continue-on-error: false

            - name: Run secret detection with gitleaks
              uses: gitleaks/gitleaks-action@v2
              env:
                GITHUB_TOKEN = ${{ secrets.GITHUB_TOKEN }}
              with:
                args: --path=. --verbose
              continue-on-error: false

            - name: Login DockerHub
              if: success()
              run: |
            
            - name: Push Docker Image
                if: success()
                run: |
                    docker build -t my_image .
                    echo ${{ secrets.DOCKERH